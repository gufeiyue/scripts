<?xml version="1.0" encoding="UTF-8"?>

<!--
/**
     * create and delpoy ant scripts
     * usage:  ant
     * <p>Title: </p>
     * <p>Description: </p>
     * <p>Copyright: Copyright (c) 2014</p>
     * <p>Company: AI(NanJing)</p>
     * @author wusk
     * @create date  2014-12-03
     * @version 
     */
-->

<project name="build_domain" default="usage" basedir=".">

    <description>Domain单独域构建打包</description>
   
    <property environment="env" />
    <property file="buildnv.properties"/>

    <target name="init" description="初始化环境">
    	
    	  <property name="project_name" value="proj"/>
    	  <property name="project.common.lib.path" value="${project.dest.dir}/common"/> 
    	  
        <echo message="初始化环境完成"/>
    </target>
    
    <target name="clean-ant-create" depends="init" description="清除临时目录">
        <echo message="clean tmp dir ..."/>
        
				<!--清空单个工程工程生成的ear包的flying_config代码目录-->
				<deltree dir="${project.tmp.path}"/>
				<deltree dir="${project.dest.dir}"/>
				
				
				<mkdir dir="${project.tmp.path}/${project_name}/app-ejb-src"/>
				
				<mkdir dir="${project.classes.path}"/>
        <mkdir dir="${project.classes.path}/${project_name}"/>
        <mkdir dir="${project.classes.path}/${project_name}/app-ejb-config"/>
        <mkdir dir="${project.classes.path}/${project_name}/app-ejb-classes"/>
        
        <mkdir dir="${project.third.lib.path}/${project_name}"/>
        
        <mkdir dir="${project.tmp.path}/${project_name}/app-ejb-src"/>
        <mkdir dir="${project.tmp.path}/${project_name}/app-ejb-desc"/>
        <mkdir dir="${project.tmp.path}/${project_name}/app-ejb-desc/META-INF"/>
        
        <mkdir dir="${project.dest.dir}/${project_name}"/>
        <mkdir dir="${project.dest.dir}/ear"/>
        <mkdir dir="${project.dest.dir}/${project_name}"/>
        

        <echo message="清除临时目录完成"/>
    </target>
    
    <target name="compile_self" depends="clean-ant-create" description="清除临时目录">
    	<javac srcdir="${project.svn.path}/code/${project_name}/src" destdir="${project.classes.path}/${project_name}" debug="true" debuglevel="lines,vars,source" nowarn="true">
            <classpath>
                <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
                <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
                <fileset dir="${project.third.lib.path}/${project_name}" includes="*.jar"/> <!--引用工程自己本身的jar包-->
            </classpath>
            
        </javac>
        
        <jar jarfile="${project.dest.dir}/${project_name}/${project_name}.jar" >
					<fileset dir="${project.classes.path}/${project_name}">
						<include name="**/*.class"/>
					</fileset>
	      </jar>
        
    </target>
    
    <!-- Step 2 编译flyingsv.jar-->
    <target name="genEJB" depends="compile_self" description="">
        
       	<taskdef name="EJBGenerator" classname="com.ai.appframe2.complex.ant.EJBGeneratorAntTask">
            <classpath>
                <!--强制优先搜索crm_app_all的config的目录下的内容,暂时以base工程下的配置文件为准-->
                <pathelement path="${project.ant.config.path}" />   
                <pathelement path="${project.ant.config.path}/runtime-config/crm_app/crm_app_all/config" />  
                <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
                <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
                <fileset dir="${project.ant.staticlib.path}" includes="*.jar"/>
                
                <fileset dir="${project.dest.dir}/${project_name}" includes="*.jar"/>
                
            </classpath>
        </taskdef>
        
        <taskdef name="EJBDoclet" classname="xdoclet.modules.ejb.EjbDocletTask">
	    		<classpath>
		       			<pathelement path="${project.ant.config.path}" />   
                <pathelement path="${project.ant.config.path}/runtime-config/crm_app/crm_app_all/config" />  
                <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
                <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
                <fileset dir="${project.ant.staticlib.path}" includes="*.jar"/>
                <fileset dir="${project.weblogic.lib.path}" includes="*.jar"/>
                
                <fileset dir="${project.dest.dir}/${project_name}" includes="*.jar"/>
                
	    		</classpath>
      	</taskdef>
      	
      	<taskdef name="CreateManifest" classname="com.ai.appframe2.complex.ant.CreateManifestAntTask">
	    		<classpath>
		       			<pathelement path="${project.ant.config.path}" />   
                <pathelement path="${project.ant.config.path}/runtime-config/crm_app/crm_app_all/config" />  
                <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
                <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
                <fileset dir="${project.ant.staticlib.path}" includes="*.jar"/>
                <fileset dir="${project.weblogic.lib.path}" includes="*.jar"/>
                
                 <fileset dir="${project.dest.dir}/${project_name}" includes="*.jar"/>
	    		</classpath>
      	</taskdef>
        
        <!--产生使用SV方式的flying-->
        <EJBGenerator destPath="${project.tmp.path}/${project_name}/app-ejb-src"   vmConfigPath="${project.ant.config.path}" failonerror="false">
            <fileset dir="${project.classes.path}/${project_name}">
                <include name="**/*SV.class" />
            </fileset>
        </EJBGenerator>
        
        <!--产生使用配置文件方式的flying-->
        <EJBGenerator destPath="${project.tmp.path}/${project_name}/app-ejb-src"   vmConfigPath="${project.ant.config.path}" type="file" failonerror="false">
        </EJBGenerator>
       
        <!--采用搜索jar文件方式生成flying-->
        <EJBGenerator destPath="${project.tmp.path}/${project_name}/app-ejb-src"  vmConfigPath="${project.ant.config.path}" type="jar" failonerror="false">
            <!--
            <fileset dir="${project.appengine.lib.path}">
                <include name="appframe.jar" />
                <include name="secframe.jar" />
                <include name="secframe_orgmodel.jar"/>
                <include name="comframe.jar"/>
                <include name="common.jar" />
                <include name="appframe_ext_exeframe.jar" />
								<include name="commoncmpt-2.2.jar" />
								
            </fileset>
            -->
        </EJBGenerator>
        
        <EJBDoclet excludedtags="@version,@author,@todo" force="true" ejbspec="2.0" verbose="true"  destdir="${project.tmp.path}/${project_name}/app-ejb-desc/META-INF"  >
					<fileset dir="${project.tmp.path}/${project_name}/app-ejb-src">
						<include name="**/*Service.java" />
					</fileset>

					<deploymentdescriptor acceptAbstractClasses="false" description="crm70 ejb" displayname="crm70 ejb beans"/>
					<weblogic xmlencoding="UTF-8" destdir="${project.tmp.path}/${project_name}/app-ejb-desc/META-INF" validatexml="true"/>
				</EJBDoclet>
				
				<CreateManifest filename="${project.tmp.path}/${project_name}/app-ejb-desc/META-INF/MANIFEST.MF" preappend="proj_config.jar">
			       <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
             <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
						 <fileset dir="${project.dest.dir}/${project_name}" includes="${project_name}.jar"/>
				</CreateManifest>
                
        <!--编译所有生成的flying.java代码-->
        <javac srcdir="${project.tmp.path}/${project_name}/app-ejb-src" destdir="${project.classes.path}/${project_name}/app-ejb-classes" debug="true" debuglevel="lines,vars,source" nowarn="true">
            <classpath>
                <pathelement path="${project.classes.path}" />
                <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
                <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
                <fileset dir="${project.third.lib.path}/${project_name}" includes="*.jar"/> <!--引用工程自己本身的jar包-->
                <fileset dir="${project.third.lib.path}/authframe" includes="*.jar"/><!--这里引用鉴权jar包-->
                 
                <fileset dir="${project.dest.dir}/${project_name}" includes="*.jar"/>
            </classpath>

        </javac>
        
        <jar jarfile="${project.dest.dir}/${project_name}/${project_name}_ejb.jar" manifest="${project.tmp.path}/${project_name}/app-ejb-desc/META-INF/MANIFEST.MF">
					<fileset dir="${project.classes.path}/${project_name}/app-ejb-classes">
						<include name="**/*.*"/>
					</fileset>
					<fileset dir="${project.tmp.path}/${project_name}/app-ejb-desc">
						<include name="META-INF/*.*"/>
					</fileset>
	      </jar>
                    
    </target>
    
    <target name="compile" depends="genEJB" description="domain ear 打包">
    	
    	 <!--使用运行时的配置文件覆盖原有的配置文件-->
		    <!--先使用跨库提交的config覆盖原来的配置文件-->
		    <copydir src="${project.runtime.config}/crm_app/crm_app_all/config" dest="${project.tmp.path}/${project_name}/app-ejb-config" forceoverwrite="true">
					<include name="**/*.*" />
				</copydir>
		
		    <copydir src="${project.runtime.config}/crm_app/crm_app_domain/domain_${project_name}/config" dest="${project.tmp.path}/${project_name}/app-ejb-config" forceoverwrite="true">
					<include name="**/*.*" />
				</copydir>
		
				<!--将配置文件打包成config.jar包-->
				<jar jarfile="${project.dest.dir}/${project_name}/ejb_config.jar">
					<fileset dir="${project.tmp.path}/${project_name}/app-ejb-config">
						<include name="**/*"/>
		      </fileset>
				</jar>
    	
  			<jar jarfile="${project.dest.dir}/ear/${project_name}.ear">
  					 <fileset dir="${project.runtime.lib.path}" includes="*.jar"/>
             <fileset dir="${project.appengine.lib.path}" includes="*.jar"/>
  					 <fileset dir="${project.dest.dir}/${project_name}" includes="*.jar"/>
  			</jar>
    </target>
    

    <target name="usage" depends="init" description="usage">
        <echo message="crm create and deploy ant scripts"/>
        <echo message="************************************"/>
        <echo message="***** PLEASE BE CAREFUL USE!!! *****"/>
        <echo message="***** PLEASE BE CAREFUL USE!!! *****"/>
        <echo message="************************************"/>
    </target>

</project>
